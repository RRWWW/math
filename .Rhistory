library("dplyr")
library("dplyr")
library(dplyr)
library(gapminder)
install.packages("gapminder")
library(dplyr)
# install.packages("gapminder")
library(gapminder)
library(dplyr)
# install.packages("gapminder")
library(gapminder)
head(gapminder)
gapminder %>%
filter(year == 2007)
gapminder %>%
filter(year == 2022)
gapminder %>%
filter(year == 2010)
gapminder %>%
filter(year == 2009)
gapminder %>%
filter(year == 2008)
gapminder %>%
filter(year == 2007)
bookdown::render_book(output_format = "bookdown::pdf_book")
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007) %>%
select(country)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007) %>%
select(country)
gapminder %>%
mutate(pop_in_thousands = pop / 1000)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
arrange(year)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
mutate(pop_in_thousands = pop / 1000)
library(gapminder)
library(dplyr)
library(magrittr)
# total population in the world in 2007
gapminder %>%
filter(year == 2007) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(gapminder)
library(dplyr)
library(magrittr)
# total population in the world in 2007
gapminder %>%
filter(year == 2007) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(gapminder)
library(dplyr)
library(magrittr)
# total population group by the continents in 2007
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
bookdown::render_book(output_format = "bookdown::pdf_book")
library(ggplot2)
library(ggplot2)
library(gapminder)
gapminder_2007 <- gapminder %>%
filter(year == 2007)
scatter_plot <- ggplot(gapminder_2007, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
scatter_plot
library(gapminder)
library(dplyr)
library(magrittr)
# total population group by the continents in 2007
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
bookdown::render_book(output_format = "bookdown::pdf_book")
library(ggplot2)
library(gapminder)
north_asia <- gapminder %>%
filter(country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
line_plot <- ggplot(north_asia, aes(x = year, y = gdpPercap, colour = country)) +
geom_line()
line_plot
library(ggplot2)
library(gapminder)
north_asia <- gapminder %>%
filter(country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
line_plot <- ggplot(north_asia, aes(x = year, y = gdpPercap, colour = country)) +
geom_line()
line_plot
hist_plot
library(ggplot2)
library(gapminder)
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram()
hist_plot
library(ggplot2)
library(gapminder)
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram()
hist_plot
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram(bins = 20)
hist_plot
library(ggplot2)
library(gapminder)
box_plot <- ggplot(gapminder_2007, aes(x = continent, y = gdpPercap)) +
geom_boxplot()
box_plot
library(ggplot2)
library(gapminder)
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram()
hist_plot
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram(bins = 20)
hist_plot
R.version
a <- 23 # prime
a
combine <- c(11, 13) # twin prime
combine
# ?c
# help(c)
add <- function(x, y) {
return(x + y)
}
add(11, 13)
get_bmi <- function (bw, bh) {
return (bw/(bh/100)^2)
}
get_bmi(70, 170)
abs(-5:5)
# install.packages("magrittr")
library(magrittr)
-5:5 %>% abs()
# with readability but too many lines
sys_date <- Sys.Date()
sys_date_yr <- format(sys_date, format = "%Y")
sys_date_num <- as.numeric(sys_date_yr)
sys_date_num
# less line but also less readability
sys_date_num <- as.numeric(format(Sys.Date(), format = "%Y"))
sys_date_num
# use %>% operator to demonstrate data workflow or forward pipe
sys_date_num <- Sys.Date() %>%
format(format = "%Y") %>%
as.numeric()
sys_date_num
library(dplyr)
# install.packages("gapminder")
library(gapminder)
head(gapminder)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007) %>%
select(country)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
mutate(pop_in_thousands = pop / 1000)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
arrange(year)
library(gapminder)
library(dplyr)
library(magrittr)
# total population in the world in 2007
gapminder %>%
filter(year == 2007) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(gapminder)
library(dplyr)
library(magrittr)
# total population group by the continents in 2007
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(ggplot2)
library(gapminder)
gapminder_2007 <- gapminder %>%
filter(year == 2007)
scatter_plot <- ggplot(gapminder_2007, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
scatter_plot
library(ggplot2)
library(gapminder)
north_asia <- gapminder %>%
filter(country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
line_plot <- ggplot(north_asia, aes(x = year, y = gdpPercap, colour = country)) +
geom_line()
line_plot
library(ggplot2)
library(gapminder)
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram()
hist_plot
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram(bins = 20)
hist_plot
R.version
a <- 23 # prime
a
combine <- c(11, 13) # twin prime
combine
# ?c
# help(c)
add <- function(x, y) {
return(x + y)
}
add(11, 13)
get_bmi <- function (bw, bh) {
return (bw/(bh/100)^2)
}
get_bmi(70, 170)
abs(-5:5)
# install.packages("magrittr")
library(magrittr)
-5:5 %>% abs()
# with readability but too many lines
sys_date <- Sys.Date()
sys_date_yr <- format(sys_date, format = "%Y")
sys_date_num <- as.numeric(sys_date_yr)
sys_date_num
# less line but also less readability
sys_date_num <- as.numeric(format(Sys.Date(), format = "%Y"))
sys_date_num
# use %>% operator to demonstrate data workflow or forward pipe
sys_date_num <- Sys.Date() %>%
format(format = "%Y") %>%
as.numeric()
sys_date_num
library(dplyr)
# install.packages("gapminder")
library(gapminder)
head(gapminder)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007) %>%
select(country)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
mutate(pop_in_thousands = pop / 1000)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
arrange(year)
library(gapminder)
library(dplyr)
library(magrittr)
# total population in the world in 2007
gapminder %>%
filter(year == 2007) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(gapminder)
library(dplyr)
library(magrittr)
# total population group by the continents in 2007
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(ggplot2)
library(gapminder)
gapminder_2007 <- gapminder %>%
filter(year == 2007)
scatter_plot <- ggplot(gapminder_2007, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
scatter_plot
library(ggplot2)
library(gapminder)
north_asia <- gapminder %>%
filter(country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
line_plot <- ggplot(north_asia, aes(x = year, y = gdpPercap, colour = country)) +
geom_line()
line_plot
library(ggplot2)
library(gapminder)
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram()
hist_plot
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram(bins = 20)
hist_plot
library(ggplot2)
library(gapminder)
box_plot <- ggplot(gapminder_2007, aes(x = continent, y = gdpPercap)) +
geom_boxplot()
box_plot
library(ggplot2)
library(gapminder)
gdpPercap_2007_na <- gapminder %>%
filter(year == 2007 & country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
bar_plot <- ggplot(gdpPercap_2007_na, aes(x = country, y = gdpPercap)) +
geom_bar(stat = "identity")
bar_plot
library(ggplot2)
library(gapminder)
gdpPercap_2007_na <- gapminder %>%
filter(year == 2007 & country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
bar_plot <- ggplot(gdpPercap_2007_na, aes(x = country, y = gdpPercap)) +
geom_bar(stat = "identity")
bar_plot
class(2L)
class(2L)
class(2L)
class(2L)
class(2L)
class(2L)
class(2L)
class(2.0L)
class(2L)
class(2.0L)
class(2L)
class(2.0L)
class(2.3L)
class(2L)
class(2.0L)
class(2.3L)
class(Sys.time())
0 %in% -5:5
0 %in% -5:5
date_of_origin <- as.Date("1970-01-01")
as.integer(date_of_origin)
time_of_origin <- as.POSIXct("1970-01-01 00:00:00", tz = "GMT")
as.integer(time_of_origin)
7 %/% 3
7 %/% 3
7 %/% 3
R.version
a <- 23 # prime
a
combine <- c(11, 13) # twin prime
combine
# ?c
# help(c)
add <- function(x, y) {
return(x + y)
}
add(11, 13)
get_bmi <- function (bw, bh) {
return (bw/(bh/100)^2)
}
get_bmi(70, 170)
abs(-5:5)
# install.packages("magrittr")
library(magrittr)
-5:5 %>% abs()
# with readability but too many lines
sys_date <- Sys.Date()
sys_date_yr <- format(sys_date, format = "%Y")
sys_date_num <- as.numeric(sys_date_yr)
sys_date_num
# less line but also less readability
sys_date_num <- as.numeric(format(Sys.Date(), format = "%Y"))
sys_date_num
# use %>% operator to demonstrate data workflow or forward pipe
sys_date_num <- Sys.Date() %>%
format(format = "%Y") %>%
as.numeric()
sys_date_num
library(dplyr)
# install.packages("gapminder")
library(gapminder)
head(gapminder)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
filter(year == 2007) %>%
select(country)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
mutate(pop_in_thousands = pop / 1000)
library(gapminder)
library(dplyr)
library(magrittr)
gapminder %>%
arrange(year)
library(gapminder)
library(dplyr)
library(magrittr)
# total population in the world in 2007
gapminder %>%
filter(year == 2007) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(gapminder)
library(dplyr)
library(magrittr)
# total population group by the continents in 2007
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(ttl_pop = sum(as.numeric(pop)))
library(ggplot2)
library(gapminder)
gapminder_2007 <- gapminder %>%
filter(year == 2007)
scatter_plot <- ggplot(gapminder_2007, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
scatter_plot
library(ggplot2)
library(gapminder)
north_asia <- gapminder %>%
filter(country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
line_plot <- ggplot(north_asia, aes(x = year, y = gdpPercap, colour = country)) +
geom_line()
line_plot
library(ggplot2)
library(gapminder)
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram()
hist_plot
hist_plot <- ggplot(gapminder_2007, aes(x = gdpPercap)) +
geom_histogram(bins = 20)
hist_plot
library(ggplot2)
library(gapminder)
box_plot <- ggplot(gapminder_2007, aes(x = continent, y = gdpPercap)) +
geom_boxplot()
box_plot
library(ggplot2)
library(gapminder)
gdpPercap_2007_na <- gapminder %>%
filter(year == 2007 & country %in% c("China", "Japan", "Taiwan", "Korea, Rep."))
bar_plot <- ggplot(gdpPercap_2007_na, aes(x = country, y = gdpPercap)) +
geom_bar(stat = "identity")
bar_plot
class(2L)
class(2.0L)
class(2.3L)
class(Sys.time())
0 %in% -5:5
date_of_origin <- as.Date("1970-01-01")
as.integer(date_of_origin)
time_of_origin <- as.POSIXct("1970-01-01 00:00:00", tz = "GMT")
as.integer(time_of_origin)
four_seasons <- c("spring", "summer", "autumn", "winter")
four_seasons
four_seasons <- c("spring", "summer", "autumn", "winter")
four_seasons
four_seasons <- c("spring", "summer", "autumn", "winter")
four_seasons
favorite_season <- four_seasons[3]
favorite_season
four_seasons <- c("spring", "summer", "autumn", "winter")
four_seasons
favorite_season <- four_seasons[3]
favorite_season
favorite_seasons <- four_seasons[c(-2, -4)]
favorite_seasons
lucky_numbers <- c(7L, 24)
class(lucky_numbers[1])
lucky_numbers <- c(7L, 24)
class(lucky_numbers[1])
lucky_numbers <- c(7L, FALSE)
lucky_numbers
lucky_numbers <- c(7L, FALSE)
lucky_numbers
class(lucky_numbers[2])
mixed_vars <- c(TRUE, 7L, 24, "spring")
mixed_vars
class(mixed_vars[1])
class(mixed_vars[2])
class(mixed_vars[3])
bookdown::render_book(output_format = "bookdown::pdf_book")
bookdown::publish_book()
bookdown::render_book()
bookdown:::serve_book()
bookdown::render_book()
bookdown::publish_book()
